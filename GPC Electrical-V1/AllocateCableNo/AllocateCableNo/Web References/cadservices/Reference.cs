//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace AllocateCableNo.cadservices {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CadARXSoap", Namespace="http://EnterpriseIntegration/CadARX")]
    public partial class CadARX : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetSecurityContextOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAboutOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckNextRegistrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDrawingSimpleOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDrawingOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckNextDrawingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDrawingTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCadFacilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCadUnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckNextCableOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckNextCabinetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckAllPrefixOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowCadFacilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowCadUnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowCadDrawingTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowCableColorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowCableGradesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowCablePrefixOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowCadPrefixOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowFacilityPrefixOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowCableTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCabinetAllocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCableSimpleOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CadARX() {
            this.Url = global::AllocateCableNo.Properties.Settings.Default.AllocateCableNo_cadservices_CadARX;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetSecurityContextCompletedEventHandler GetSecurityContextCompleted;
        
        /// <remarks/>
        public event GetAboutCompletedEventHandler GetAboutCompleted;
        
        /// <remarks/>
        public event CheckNextRegistrationCompletedEventHandler CheckNextRegistrationCompleted;
        
        /// <remarks/>
        public event CreateDrawingSimpleCompletedEventHandler CreateDrawingSimpleCompleted;
        
        /// <remarks/>
        public event CreateDrawingCompletedEventHandler CreateDrawingCompleted;
        
        /// <remarks/>
        public event CheckNextDrawingCompletedEventHandler CheckNextDrawingCompleted;
        
        /// <remarks/>
        public event GetDrawingTypeCompletedEventHandler GetDrawingTypeCompleted;
        
        /// <remarks/>
        public event GetCadFacilityCompletedEventHandler GetCadFacilityCompleted;
        
        /// <remarks/>
        public event GetCadUnitCompletedEventHandler GetCadUnitCompleted;
        
        /// <remarks/>
        public event CheckNextCableCompletedEventHandler CheckNextCableCompleted;
        
        /// <remarks/>
        public event CheckNextCabinetsCompletedEventHandler CheckNextCabinetsCompleted;
        
        /// <remarks/>
        public event CheckAllPrefixCompletedEventHandler CheckAllPrefixCompleted;
        
        /// <remarks/>
        public event ShowCadFacilityCompletedEventHandler ShowCadFacilityCompleted;
        
        /// <remarks/>
        public event ShowCadUnitCompletedEventHandler ShowCadUnitCompleted;
        
        /// <remarks/>
        public event ShowCadDrawingTypeCompletedEventHandler ShowCadDrawingTypeCompleted;
        
        /// <remarks/>
        public event ShowCableColorsCompletedEventHandler ShowCableColorsCompleted;
        
        /// <remarks/>
        public event ShowCableGradesCompletedEventHandler ShowCableGradesCompleted;
        
        /// <remarks/>
        public event ShowCablePrefixCompletedEventHandler ShowCablePrefixCompleted;
        
        /// <remarks/>
        public event ShowCadPrefixCompletedEventHandler ShowCadPrefixCompleted;
        
        /// <remarks/>
        public event ShowFacilityPrefixCompletedEventHandler ShowFacilityPrefixCompleted;
        
        /// <remarks/>
        public event ShowCableTypesCompletedEventHandler ShowCableTypesCompleted;
        
        /// <remarks/>
        public event CreateCabinetAllocationCompletedEventHandler CreateCabinetAllocationCompleted;
        
        /// <remarks/>
        public event CreateCableSimpleCompletedEventHandler CreateCableSimpleCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EnterpriseIntegration/CadARX/GetSecurityContext", RequestNamespace="http://EnterpriseIntegration/CadARX", ResponseNamespace="http://EnterpriseIntegration/CadARX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSecurityContext() {
            object[] results = this.Invoke("GetSecurityContext", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSecurityContextAsync() {
            this.GetSecurityContextAsync(null);
        }
        
        /// <remarks/>
        public void GetSecurityContextAsync(object userState) {
            if ((this.GetSecurityContextOperationCompleted == null)) {
                this.GetSecurityContextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSecurityContextOperationCompleted);
            }
            this.InvokeAsync("GetSecurityContext", new object[0], this.GetSecurityContextOperationCompleted, userState);
        }
        
        private void OnGetSecurityContextOperationCompleted(object arg) {
            if ((this.GetSecurityContextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSecurityContextCompleted(this, new GetSecurityContextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EnterpriseIntegration/CadARX/GetAbout", RequestNamespace="http://EnterpriseIntegration/CadARX", ResponseNamespace="http://EnterpriseIntegration/CadARX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAbout() {
            object[] results = this.Invoke("GetAbout", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAboutAsync() {
            this.GetAboutAsync(null);
        }
        
        /// <remarks/>
        public void GetAboutAsync(object userState) {
            if ((this.GetAboutOperationCompleted == null)) {
                this.GetAboutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAboutOperationCompleted);
            }
            this.InvokeAsync("GetAbout", new object[0], this.GetAboutOperationCompleted, userState);
        }
        
        private void OnGetAboutOperationCompleted(object arg) {
            if ((this.GetAboutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAboutCompleted(this, new GetAboutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EnterpriseIntegration/CadARX/CheckNextRegistration", RequestNamespace="http://EnterpriseIntegration/CadARX", ResponseNamespace="http://EnterpriseIntegration/CadARX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CheckNextRegistration(string facility, string unit, string drawingtype) {
            object[] results = this.Invoke("CheckNextRegistration", new object[] {
                        facility,
                        unit,
                        drawingtype});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CheckNextRegistrationAsync(string facility, string unit, string drawingtype) {
            this.CheckNextRegistrationAsync(facility, unit, drawingtype, null);
        }
        
        /// <remarks/>
        public void CheckNextRegistrationAsync(string facility, string unit, string drawingtype, object userState) {
            if ((this.CheckNextRegistrationOperationCompleted == null)) {
                this.CheckNextRegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckNextRegistrationOperationCompleted);
            }
            this.InvokeAsync("CheckNextRegistration", new object[] {
                        facility,
                        unit,
                        drawingtype}, this.CheckNextRegistrationOperationCompleted, userState);
        }
        
        private void OnCheckNextRegistrationOperationCompleted(object arg) {
            if ((this.CheckNextRegistrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckNextRegistrationCompleted(this, new CheckNextRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EnterpriseIntegration/CadARX/CreateDrawingSimple", RequestNamespace="http://EnterpriseIntegration/CadARX", ResponseNamespace="http://EnterpriseIntegration/CadARX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CreateDrawingSimple(string prefix, string project) {
            object[] results = this.Invoke("CreateDrawingSimple", new object[] {
                        prefix,
                        project});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDrawingSimpleAsync(string prefix, string project) {
            this.CreateDrawingSimpleAsync(prefix, project, null);
        }
        
        /// <remarks/>
        public void CreateDrawingSimpleAsync(string prefix, string project, object userState) {
            if ((this.CreateDrawingSimpleOperationCompleted == null)) {
                this.CreateDrawingSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDrawingSimpleOperationCompleted);
            }
            this.InvokeAsync("CreateDrawingSimple", new object[] {
                        prefix,
                        project}, this.CreateDrawingSimpleOperationCompleted, userState);
        }
        
        private void OnCreateDrawingSimpleOperationCompleted(object arg) {
            if ((this.CreateDrawingSimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDrawingSimpleCompleted(this, new CreateDrawingSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EnterpriseIntegration/CadARX/CreateDrawing", RequestNamespace="http://EnterpriseIntegration/CadARX", ResponseNamespace="http://EnterpriseIntegration/CadARX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CreateDrawing(string prefix, int facilityid, int unitid, string equipment, string device, int drawingtypeid) {
            object[] results = this.Invoke("CreateDrawing", new object[] {
                        prefix,
                        facilityid,
                        unitid,
                        equipment,
                        device,
                        drawingtypeid});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDrawingAsync(string prefix, int facilityid, int unitid, string equipment, string device, int drawingtypeid) {
            this.CreateDrawingAsync(prefix, facilityid, unitid, equipment, device, drawingtypeid, null);
        }
        
        /// <remarks/>
        public void CreateDrawingAsync(string prefix, int facilityid, int unitid, string equipment, string device, int drawingtypeid, object userState) {
            if ((this.CreateDrawingOperationCompleted == null)) {
                this.CreateDrawingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDrawingOperationCompleted);
            }
            this.InvokeAsync("CreateDrawing", new object[] {
                        prefix,
                        facilityid,
                        unitid,
                        equipment,
                        device,
                        drawingtypeid}, this.CreateDrawingOperationCompleted, userState);
        }
        
        private void OnCreateDrawingOperationCompleted(object arg) {
            if ((this.CreateDrawingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDrawingCompleted(this, new CreateDrawingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EnterpriseIntegration/CadARX/CheckNextDrawing", RequestNamespace="http://EnterpriseIntegration/CadARX", ResponseNamespace="http://EnterpriseIntegration/CadARX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CheckNextDrawing(string prefix) {
            object[] results = this.Invoke("CheckNextDrawing", new object[] {
                        prefix});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CheckNextDrawingAsync(string prefix) {
            this.CheckNextDrawingAsync(prefix, null);
        }
        
        /// <remarks/>
        public void CheckNextDrawingAsync(string prefix, object userState) {
            if ((this.CheckNextDrawingOperationCompleted == null)) {
                this.CheckNextDrawingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckNextDrawingOperationCompleted);
            }
            this.InvokeAsync("CheckNextDrawing", new object[] {
                        prefix}, this.CheckNextDrawingOperationCompleted, userState);
        }
        
        private void OnCheckNextDrawingOperationCompleted(object arg) {
            if ((this.CheckNextDrawingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckNextDrawingCompleted(this, new CheckNextDrawingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EnterpriseIntegration/CadARX/GetDrawingType", RequestNamespace="http://EnterpriseIntegration/CadARX", ResponseNamespace="http://EnterpriseIntegration/CadARX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetDrawingType(string drawingno) {
            object[] results = this.Invoke("GetDrawingType", new object[] {
                        drawingno});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetDrawingTypeAsync(string drawingno) {
            this.GetDrawingTypeAsync(drawingno, null);
        }
        
        /// <remarks/>
        public void GetDrawingTypeAsync(string drawingno, object userState) {
            if ((this.GetDrawingTypeOperationCompleted == null)) {
                this.GetDrawingTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDrawingTypeOperationCompleted);
            }
            this.InvokeAsync("GetDrawingType", new object[] {
                        drawingno}, this.GetDrawingTypeOperationCompleted, userState);
        }
        
        private void OnGetDrawingTypeOperationCompleted(object arg) {
            if ((this.GetDrawingTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDrawingTypeCompleted(this, new GetDrawingTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EnterpriseIntegration/CadARX/GetCadFacility", RequestNamespace="http://EnterpriseIntegration/CadARX", ResponseNamespace="http://EnterpriseIntegration/CadARX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetCadFacility(string drawingno) {
            object[] results = this.Invoke("GetCadFacility", new object[] {
                        drawingno});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCadFacilityAsync(string drawingno) {
            this.GetCadFacilityAsync(drawingno, null);
        }
        
        /// <remarks/>
        public void GetCadFacilityAsync(string drawingno, object userState) {
            if ((this.GetCadFacilityOperationCompleted == null)) {
                this.GetCadFacilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCadFacilityOperationCompleted);
            }
            this.InvokeAsync("GetCadFacility", new object[] {
                        drawingno}, this.GetCadFacilityOperationCompleted, userState);
        }
        
        private void OnGetCadFacilityOperationCompleted(object arg) {
            if ((this.GetCadFacilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCadFacilityCompleted(this, new GetCadFacilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EnterpriseIntegration/CadARX/GetCadUnit", RequestNamespace="http://EnterpriseIntegration/CadARX", ResponseNamespace="http://EnterpriseIntegration/CadARX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetCadUnit(string drawingno) {
            object[] results = this.Invoke("GetCadUnit", new object[] {
                        drawingno});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCadUnitAsync(string drawingno) {
            this.GetCadUnitAsync(drawingno, null);
        }
        
        /// <remarks/>
        public void GetCadUnitAsync(string drawingno, object userState) {
            if ((this.GetCadUnitOperationCompleted == null)) {
                this.GetCadUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCadUnitOperationCompleted);
            }
            this.InvokeAsync("GetCadUnit", new object[] {
                        drawingno}, this.GetCadUnitOperationCompleted, userState);
        }
        
        private void OnGetCadUnitOperationCompleted(object arg) {
            if ((this.GetCadUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCadUnitCompleted(this, new GetCadUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EnterpriseIntegration/CadARX/CheckNextCable", RequestNamespace="http://EnterpriseIntegration/CadARX", ResponseNamespace="http://EnterpriseIntegration/CadARX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CheckNextCable(string prefix) {
            object[] results = this.Invoke("CheckNextCable", new object[] {
                        prefix});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CheckNextCableAsync(string prefix) {
            this.CheckNextCableAsync(prefix, null);
        }
        
        /// <remarks/>
        public void CheckNextCableAsync(string prefix, object userState) {
            if ((this.CheckNextCableOperationCompleted == null)) {
                this.CheckNextCableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckNextCableOperationCompleted);
            }
            this.InvokeAsync("CheckNextCable", new object[] {
                        prefix}, this.CheckNextCableOperationCompleted, userState);
        }
        
        private void OnCheckNextCableOperationCompleted(object arg) {
            if ((this.CheckNextCableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckNextCableCompleted(this, new CheckNextCableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EnterpriseIntegration/CadARX/CheckNextCabinets", RequestNamespace="http://EnterpriseIntegration/CadARX", ResponseNamespace="http://EnterpriseIntegration/CadARX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CheckNextCabinets(string area) {
            object[] results = this.Invoke("CheckNextCabinets", new object[] {
                        area});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CheckNextCabinetsAsync(string area) {
            this.CheckNextCabinetsAsync(area, null);
        }
        
        /// <remarks/>
        public void CheckNextCabinetsAsync(string area, object userState) {
            if ((this.CheckNextCabinetsOperationCompleted == null)) {
                this.CheckNextCabinetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckNextCabinetsOperationCompleted);
            }
            this.InvokeAsync("CheckNextCabinets", new object[] {
                        area}, this.CheckNextCabinetsOperationCompleted, userState);
        }
        
        private void OnCheckNextCabinetsOperationCompleted(object arg) {
            if ((this.CheckNextCabinetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckNextCabinetsCompleted(this, new CheckNextCabinetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EnterpriseIntegration/CadARX/CheckAllPrefix", RequestNamespace="http://EnterpriseIntegration/CadARX", ResponseNamespace="http://EnterpriseIntegration/CadARX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CheckAllPrefix() {
            object[] results = this.Invoke("CheckAllPrefix", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CheckAllPrefixAsync() {
            this.CheckAllPrefixAsync(null);
        }
        
        /// <remarks/>
        public void CheckAllPrefixAsync(object userState) {
            if ((this.CheckAllPrefixOperationCompleted == null)) {
                this.CheckAllPrefixOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckAllPrefixOperationCompleted);
            }
            this.InvokeAsync("CheckAllPrefix", new object[0], this.CheckAllPrefixOperationCompleted, userState);
        }
        
        private void OnCheckAllPrefixOperationCompleted(object arg) {
            if ((this.CheckAllPrefixCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckAllPrefixCompleted(this, new CheckAllPrefixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EnterpriseIntegration/CadARX/ShowCadFacility", RequestNamespace="http://EnterpriseIntegration/CadARX", ResponseNamespace="http://EnterpriseIntegration/CadARX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ShowCadFacility() {
            object[] results = this.Invoke("ShowCadFacility", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ShowCadFacilityAsync() {
            this.ShowCadFacilityAsync(null);
        }
        
        /// <remarks/>
        public void ShowCadFacilityAsync(object userState) {
            if ((this.ShowCadFacilityOperationCompleted == null)) {
                this.ShowCadFacilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowCadFacilityOperationCompleted);
            }
            this.InvokeAsync("ShowCadFacility", new object[0], this.ShowCadFacilityOperationCompleted, userState);
        }
        
        private void OnShowCadFacilityOperationCompleted(object arg) {
            if ((this.ShowCadFacilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowCadFacilityCompleted(this, new ShowCadFacilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EnterpriseIntegration/CadARX/ShowCadUnit", RequestNamespace="http://EnterpriseIntegration/CadARX", ResponseNamespace="http://EnterpriseIntegration/CadARX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ShowCadUnit() {
            object[] results = this.Invoke("ShowCadUnit", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ShowCadUnitAsync() {
            this.ShowCadUnitAsync(null);
        }
        
        /// <remarks/>
        public void ShowCadUnitAsync(object userState) {
            if ((this.ShowCadUnitOperationCompleted == null)) {
                this.ShowCadUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowCadUnitOperationCompleted);
            }
            this.InvokeAsync("ShowCadUnit", new object[0], this.ShowCadUnitOperationCompleted, userState);
        }
        
        private void OnShowCadUnitOperationCompleted(object arg) {
            if ((this.ShowCadUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowCadUnitCompleted(this, new ShowCadUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EnterpriseIntegration/CadARX/ShowCadDrawingType", RequestNamespace="http://EnterpriseIntegration/CadARX", ResponseNamespace="http://EnterpriseIntegration/CadARX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ShowCadDrawingType() {
            object[] results = this.Invoke("ShowCadDrawingType", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ShowCadDrawingTypeAsync() {
            this.ShowCadDrawingTypeAsync(null);
        }
        
        /// <remarks/>
        public void ShowCadDrawingTypeAsync(object userState) {
            if ((this.ShowCadDrawingTypeOperationCompleted == null)) {
                this.ShowCadDrawingTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowCadDrawingTypeOperationCompleted);
            }
            this.InvokeAsync("ShowCadDrawingType", new object[0], this.ShowCadDrawingTypeOperationCompleted, userState);
        }
        
        private void OnShowCadDrawingTypeOperationCompleted(object arg) {
            if ((this.ShowCadDrawingTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowCadDrawingTypeCompleted(this, new ShowCadDrawingTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EnterpriseIntegration/CadARX/ShowCableColors", RequestNamespace="http://EnterpriseIntegration/CadARX", ResponseNamespace="http://EnterpriseIntegration/CadARX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ShowCableColors() {
            object[] results = this.Invoke("ShowCableColors", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ShowCableColorsAsync() {
            this.ShowCableColorsAsync(null);
        }
        
        /// <remarks/>
        public void ShowCableColorsAsync(object userState) {
            if ((this.ShowCableColorsOperationCompleted == null)) {
                this.ShowCableColorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowCableColorsOperationCompleted);
            }
            this.InvokeAsync("ShowCableColors", new object[0], this.ShowCableColorsOperationCompleted, userState);
        }
        
        private void OnShowCableColorsOperationCompleted(object arg) {
            if ((this.ShowCableColorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowCableColorsCompleted(this, new ShowCableColorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EnterpriseIntegration/CadARX/ShowCableGrades", RequestNamespace="http://EnterpriseIntegration/CadARX", ResponseNamespace="http://EnterpriseIntegration/CadARX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ShowCableGrades() {
            object[] results = this.Invoke("ShowCableGrades", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ShowCableGradesAsync() {
            this.ShowCableGradesAsync(null);
        }
        
        /// <remarks/>
        public void ShowCableGradesAsync(object userState) {
            if ((this.ShowCableGradesOperationCompleted == null)) {
                this.ShowCableGradesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowCableGradesOperationCompleted);
            }
            this.InvokeAsync("ShowCableGrades", new object[0], this.ShowCableGradesOperationCompleted, userState);
        }
        
        private void OnShowCableGradesOperationCompleted(object arg) {
            if ((this.ShowCableGradesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowCableGradesCompleted(this, new ShowCableGradesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EnterpriseIntegration/CadARX/ShowCablePrefix", RequestNamespace="http://EnterpriseIntegration/CadARX", ResponseNamespace="http://EnterpriseIntegration/CadARX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ShowCablePrefix() {
            object[] results = this.Invoke("ShowCablePrefix", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ShowCablePrefixAsync() {
            this.ShowCablePrefixAsync(null);
        }
        
        /// <remarks/>
        public void ShowCablePrefixAsync(object userState) {
            if ((this.ShowCablePrefixOperationCompleted == null)) {
                this.ShowCablePrefixOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowCablePrefixOperationCompleted);
            }
            this.InvokeAsync("ShowCablePrefix", new object[0], this.ShowCablePrefixOperationCompleted, userState);
        }
        
        private void OnShowCablePrefixOperationCompleted(object arg) {
            if ((this.ShowCablePrefixCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowCablePrefixCompleted(this, new ShowCablePrefixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EnterpriseIntegration/CadARX/ShowCadPrefix", RequestNamespace="http://EnterpriseIntegration/CadARX", ResponseNamespace="http://EnterpriseIntegration/CadARX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ShowCadPrefix() {
            object[] results = this.Invoke("ShowCadPrefix", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ShowCadPrefixAsync() {
            this.ShowCadPrefixAsync(null);
        }
        
        /// <remarks/>
        public void ShowCadPrefixAsync(object userState) {
            if ((this.ShowCadPrefixOperationCompleted == null)) {
                this.ShowCadPrefixOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowCadPrefixOperationCompleted);
            }
            this.InvokeAsync("ShowCadPrefix", new object[0], this.ShowCadPrefixOperationCompleted, userState);
        }
        
        private void OnShowCadPrefixOperationCompleted(object arg) {
            if ((this.ShowCadPrefixCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowCadPrefixCompleted(this, new ShowCadPrefixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EnterpriseIntegration/CadARX/ShowFacilityPrefix", RequestNamespace="http://EnterpriseIntegration/CadARX", ResponseNamespace="http://EnterpriseIntegration/CadARX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ShowFacilityPrefix() {
            object[] results = this.Invoke("ShowFacilityPrefix", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ShowFacilityPrefixAsync() {
            this.ShowFacilityPrefixAsync(null);
        }
        
        /// <remarks/>
        public void ShowFacilityPrefixAsync(object userState) {
            if ((this.ShowFacilityPrefixOperationCompleted == null)) {
                this.ShowFacilityPrefixOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowFacilityPrefixOperationCompleted);
            }
            this.InvokeAsync("ShowFacilityPrefix", new object[0], this.ShowFacilityPrefixOperationCompleted, userState);
        }
        
        private void OnShowFacilityPrefixOperationCompleted(object arg) {
            if ((this.ShowFacilityPrefixCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowFacilityPrefixCompleted(this, new ShowFacilityPrefixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EnterpriseIntegration/CadARX/ShowCableTypes", RequestNamespace="http://EnterpriseIntegration/CadARX", ResponseNamespace="http://EnterpriseIntegration/CadARX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ShowCableTypes() {
            object[] results = this.Invoke("ShowCableTypes", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ShowCableTypesAsync() {
            this.ShowCableTypesAsync(null);
        }
        
        /// <remarks/>
        public void ShowCableTypesAsync(object userState) {
            if ((this.ShowCableTypesOperationCompleted == null)) {
                this.ShowCableTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowCableTypesOperationCompleted);
            }
            this.InvokeAsync("ShowCableTypes", new object[0], this.ShowCableTypesOperationCompleted, userState);
        }
        
        private void OnShowCableTypesOperationCompleted(object arg) {
            if ((this.ShowCableTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowCableTypesCompleted(this, new ShowCableTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EnterpriseIntegration/CadARX/CreateCabinetAllocation", RequestNamespace="http://EnterpriseIntegration/CadARX", ResponseNamespace="http://EnterpriseIntegration/CadARX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CreateCabinetAllocation(int cabinetid, string location) {
            object[] results = this.Invoke("CreateCabinetAllocation", new object[] {
                        cabinetid,
                        location});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCabinetAllocationAsync(int cabinetid, string location) {
            this.CreateCabinetAllocationAsync(cabinetid, location, null);
        }
        
        /// <remarks/>
        public void CreateCabinetAllocationAsync(int cabinetid, string location, object userState) {
            if ((this.CreateCabinetAllocationOperationCompleted == null)) {
                this.CreateCabinetAllocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCabinetAllocationOperationCompleted);
            }
            this.InvokeAsync("CreateCabinetAllocation", new object[] {
                        cabinetid,
                        location}, this.CreateCabinetAllocationOperationCompleted, userState);
        }
        
        private void OnCreateCabinetAllocationOperationCompleted(object arg) {
            if ((this.CreateCabinetAllocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCabinetAllocationCompleted(this, new CreateCabinetAllocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EnterpriseIntegration/CadARX/CreateCableSimple", RequestNamespace="http://EnterpriseIntegration/CadARX", ResponseNamespace="http://EnterpriseIntegration/CadARX", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CreateCableSimple(string prefix, string project) {
            object[] results = this.Invoke("CreateCableSimple", new object[] {
                        prefix,
                        project});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCableSimpleAsync(string prefix, string project) {
            this.CreateCableSimpleAsync(prefix, project, null);
        }
        
        /// <remarks/>
        public void CreateCableSimpleAsync(string prefix, string project, object userState) {
            if ((this.CreateCableSimpleOperationCompleted == null)) {
                this.CreateCableSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCableSimpleOperationCompleted);
            }
            this.InvokeAsync("CreateCableSimple", new object[] {
                        prefix,
                        project}, this.CreateCableSimpleOperationCompleted, userState);
        }
        
        private void OnCreateCableSimpleOperationCompleted(object arg) {
            if ((this.CreateCableSimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCableSimpleCompleted(this, new CreateCableSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetSecurityContextCompletedEventHandler(object sender, GetSecurityContextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSecurityContextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSecurityContextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAboutCompletedEventHandler(object sender, GetAboutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAboutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAboutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CheckNextRegistrationCompletedEventHandler(object sender, CheckNextRegistrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckNextRegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckNextRegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CreateDrawingSimpleCompletedEventHandler(object sender, CreateDrawingSimpleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDrawingSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDrawingSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CreateDrawingCompletedEventHandler(object sender, CreateDrawingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDrawingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDrawingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CheckNextDrawingCompletedEventHandler(object sender, CheckNextDrawingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckNextDrawingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckNextDrawingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDrawingTypeCompletedEventHandler(object sender, GetDrawingTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDrawingTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDrawingTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCadFacilityCompletedEventHandler(object sender, GetCadFacilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCadFacilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCadFacilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCadUnitCompletedEventHandler(object sender, GetCadUnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCadUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCadUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CheckNextCableCompletedEventHandler(object sender, CheckNextCableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckNextCableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckNextCableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CheckNextCabinetsCompletedEventHandler(object sender, CheckNextCabinetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckNextCabinetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckNextCabinetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CheckAllPrefixCompletedEventHandler(object sender, CheckAllPrefixCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckAllPrefixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckAllPrefixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ShowCadFacilityCompletedEventHandler(object sender, ShowCadFacilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowCadFacilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowCadFacilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ShowCadUnitCompletedEventHandler(object sender, ShowCadUnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowCadUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowCadUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ShowCadDrawingTypeCompletedEventHandler(object sender, ShowCadDrawingTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowCadDrawingTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowCadDrawingTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ShowCableColorsCompletedEventHandler(object sender, ShowCableColorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowCableColorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowCableColorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ShowCableGradesCompletedEventHandler(object sender, ShowCableGradesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowCableGradesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowCableGradesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ShowCablePrefixCompletedEventHandler(object sender, ShowCablePrefixCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowCablePrefixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowCablePrefixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ShowCadPrefixCompletedEventHandler(object sender, ShowCadPrefixCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowCadPrefixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowCadPrefixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ShowFacilityPrefixCompletedEventHandler(object sender, ShowFacilityPrefixCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowFacilityPrefixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowFacilityPrefixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ShowCableTypesCompletedEventHandler(object sender, ShowCableTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowCableTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowCableTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CreateCabinetAllocationCompletedEventHandler(object sender, CreateCabinetAllocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCabinetAllocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCabinetAllocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CreateCableSimpleCompletedEventHandler(object sender, CreateCableSimpleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCableSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCableSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591