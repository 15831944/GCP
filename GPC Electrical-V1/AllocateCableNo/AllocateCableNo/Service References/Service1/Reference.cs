//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AllocateCableNo.Service1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://EnterpriseIntegration/CadARX", ConfigurationName="Service1.CadARXSoap")]
    public interface CadARXSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseIntegration/CadARX/GetSecurityContext", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSecurityContext();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseIntegration/CadARX/GetAbout", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAbout();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseIntegration/CadARX/CheckNextRegistration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode CheckNextRegistration(string facility, string unit, string drawingtype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseIntegration/CadARX/CreateDrawingSimple", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode CreateDrawingSimple(string prefix, string project);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseIntegration/CadARX/CreateDrawing", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode CreateDrawing(string prefix, int facilityid, int unitid, string equipment, string device, int drawingtypeid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseIntegration/CadARX/CheckNextDrawing", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode CheckNextDrawing(string prefix);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseIntegration/CadARX/GetDrawingType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetDrawingType(string drawingno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseIntegration/CadARX/GetCadFacility", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetCadFacility(string drawingno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseIntegration/CadARX/GetCadUnit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetCadUnit(string drawingno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseIntegration/CadARX/CheckNextCable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode CheckNextCable(string prefix);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseIntegration/CadARX/CheckNextCabinets", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode CheckNextCabinets(string area);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseIntegration/CadARX/CheckAllPrefix", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode CheckAllPrefix();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseIntegration/CadARX/ShowCadFacility", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode ShowCadFacility();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseIntegration/CadARX/ShowCadUnit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode ShowCadUnit();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseIntegration/CadARX/ShowCadDrawingType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode ShowCadDrawingType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseIntegration/CadARX/ShowCableColors", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode ShowCableColors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseIntegration/CadARX/ShowCableGrades", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode ShowCableGrades();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseIntegration/CadARX/ShowCablePrefix", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode ShowCablePrefix();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseIntegration/CadARX/ShowCadPrefix", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode ShowCadPrefix();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseIntegration/CadARX/ShowFacilityPrefix", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode ShowFacilityPrefix();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseIntegration/CadARX/ShowCableTypes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode ShowCableTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseIntegration/CadARX/CreateCabinetAllocation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode CreateCabinetAllocation(int cabinetid, string location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://EnterpriseIntegration/CadARX/CreateCableSimple", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode CreateCableSimple(string prefix, string project);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CadARXSoapChannel : AllocateCableNo.Service1.CadARXSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CadARXSoapClient : System.ServiceModel.ClientBase<AllocateCableNo.Service1.CadARXSoap>, AllocateCableNo.Service1.CadARXSoap {
        
        public CadARXSoapClient() {
        }
        
        public CadARXSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CadARXSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CadARXSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CadARXSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetSecurityContext() {
            return base.Channel.GetSecurityContext();
        }
        
        public string GetAbout() {
            return base.Channel.GetAbout();
        }
        
        public System.Xml.XmlNode CheckNextRegistration(string facility, string unit, string drawingtype) {
            return base.Channel.CheckNextRegistration(facility, unit, drawingtype);
        }
        
        public System.Xml.XmlNode CreateDrawingSimple(string prefix, string project) {
            return base.Channel.CreateDrawingSimple(prefix, project);
        }
        
        public System.Xml.XmlNode CreateDrawing(string prefix, int facilityid, int unitid, string equipment, string device, int drawingtypeid) {
            return base.Channel.CreateDrawing(prefix, facilityid, unitid, equipment, device, drawingtypeid);
        }
        
        public System.Xml.XmlNode CheckNextDrawing(string prefix) {
            return base.Channel.CheckNextDrawing(prefix);
        }
        
        public System.Xml.XmlNode GetDrawingType(string drawingno) {
            return base.Channel.GetDrawingType(drawingno);
        }
        
        public System.Xml.XmlNode GetCadFacility(string drawingno) {
            return base.Channel.GetCadFacility(drawingno);
        }
        
        public System.Xml.XmlNode GetCadUnit(string drawingno) {
            return base.Channel.GetCadUnit(drawingno);
        }
        
        public System.Xml.XmlNode CheckNextCable(string prefix) {
            return base.Channel.CheckNextCable(prefix);
        }
        
        public System.Xml.XmlNode CheckNextCabinets(string area) {
            return base.Channel.CheckNextCabinets(area);
        }
        
        public System.Xml.XmlNode CheckAllPrefix() {
            return base.Channel.CheckAllPrefix();
        }
        
        public System.Xml.XmlNode ShowCadFacility() {
            return base.Channel.ShowCadFacility();
        }
        
        public System.Xml.XmlNode ShowCadUnit() {
            return base.Channel.ShowCadUnit();
        }
        
        public System.Xml.XmlNode ShowCadDrawingType() {
            return base.Channel.ShowCadDrawingType();
        }
        
        public System.Xml.XmlNode ShowCableColors() {
            return base.Channel.ShowCableColors();
        }
        
        public System.Xml.XmlNode ShowCableGrades() {
            return base.Channel.ShowCableGrades();
        }
        
        public System.Xml.XmlNode ShowCablePrefix() {
            return base.Channel.ShowCablePrefix();
        }
        
        public System.Xml.XmlNode ShowCadPrefix() {
            return base.Channel.ShowCadPrefix();
        }
        
        public System.Xml.XmlNode ShowFacilityPrefix() {
            return base.Channel.ShowFacilityPrefix();
        }
        
        public System.Xml.XmlNode ShowCableTypes() {
            return base.Channel.ShowCableTypes();
        }
        
        public System.Xml.XmlNode CreateCabinetAllocation(int cabinetid, string location) {
            return base.Channel.CreateCabinetAllocation(cabinetid, location);
        }
        
        public System.Xml.XmlNode CreateCableSimple(string prefix, string project) {
            return base.Channel.CreateCableSimple(prefix, project);
        }
    }
}
